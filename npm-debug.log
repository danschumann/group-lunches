0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'client-sessions',
1 verbose cli   '--save' ]
2 info using npm@1.3.14
3 info using node@v0.10.22
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose readDependencies using package.json deps
6 verbose cache add [ 'client-sessions', null ]
7 verbose cache add name=undefined spec="client-sessions" args=["client-sessions",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: 'client-sessions',
8 verbose parsed url   path: 'client-sessions',
8 verbose parsed url   href: 'client-sessions' }
9 silly lockFile acc89396-client-sessions client-sessions
10 verbose lock client-sessions C:\Users\dan\AppData\Roaming\npm-cache\acc89396-client-sessions.lock
11 silly lockFile acc89396-client-sessions client-sessions
12 silly lockFile acc89396-client-sessions client-sessions
13 verbose addNamed [ 'client-sessions', '' ]
14 verbose addNamed [ null, '*' ]
15 silly lockFile d5fa4bc7-client-sessions client-sessions@
16 verbose lock client-sessions@ C:\Users\dan\AppData\Roaming\npm-cache\d5fa4bc7-client-sessions.lock
17 silly addNameRange { name: 'client-sessions', range: '*', hasData: false }
18 verbose url raw client-sessions
19 verbose url resolving [ 'https://registry.npmjs.org/', './client-sessions' ]
20 verbose url resolved https://registry.npmjs.org/client-sessions
21 info trying registry request attempt 1 at 14:10:37
22 verbose etag "DD1FYLHUW33S8YI7T5A7UYPKO"
23 http GET https://registry.npmjs.org/client-sessions
24 http 304 https://registry.npmjs.org/client-sessions
25 silly registry.get cb [ 304,
25 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
25 silly registry.get     etag: '"DD1FYLHUW33S8YI7T5A7UYPKO"',
25 silly registry.get     date: 'Sun, 17 Nov 2013 20:10:38 GMT',
25 silly registry.get     'content-length': '0' } ]
26 verbose etag client-sessions from cache
27 silly addNameRange number 2 { name: 'client-sessions', range: '*', hasData: true }
28 silly addNameRange versions [ 'client-sessions',
28 silly addNameRange   [ '0.0.2',
28 silly addNameRange     '0.0.3',
28 silly addNameRange     '0.0.4',
28 silly addNameRange     '0.0.5',
28 silly addNameRange     '0.0.6',
28 silly addNameRange     '0.0.7',
28 silly addNameRange     '0.0.8',
28 silly addNameRange     '0.0.9',
28 silly addNameRange     '0.1.0',
28 silly addNameRange     '0.1.1',
28 silly addNameRange     '0.2.0',
28 silly addNameRange     '0.3.0',
28 silly addNameRange     '0.3.1',
28 silly addNameRange     '0.4.0' ] ]
29 verbose addNamed [ 'client-sessions', '0.4.0' ]
30 verbose addNamed [ '0.4.0', '0.4.0' ]
31 silly lockFile 7b6aa28b-client-sessions-0-4-0 client-sessions@0.4.0
32 verbose lock client-sessions@0.4.0 C:\Users\dan\AppData\Roaming\npm-cache\7b6aa28b-client-sessions-0-4-0.lock
33 silly lockFile 7b6aa28b-client-sessions-0-4-0 client-sessions@0.4.0
34 silly lockFile 7b6aa28b-client-sessions-0-4-0 client-sessions@0.4.0
35 silly lockFile d5fa4bc7-client-sessions client-sessions@
36 silly lockFile d5fa4bc7-client-sessions client-sessions@
37 silly resolved [ { name: 'client-sessions',
37 silly resolved     version: '0.4.0',
37 silly resolved     description: 'secure sessions stored in cookies',
37 silly resolved     main: 'lib/client-sessions',
37 silly resolved     repository:
37 silly resolved      { type: 'git',
37 silly resolved        url: 'https://github.com/mozilla/node-client-sessions' },
37 silly resolved     dependencies: { cookies: '0.3.6', 'node-proxy': '0.6.0' },
37 silly resolved     devDependencies:
37 silly resolved      { vows: '0.7.0',
37 silly resolved        express: '2.5.0',
37 silly resolved        tobi: 'https://github.com/Cowboy-coder/tobi/tarball/fd733a3',
37 silly resolved        zombie: '1.4.1' },
37 silly resolved     author: { name: 'Ben Adida', email: 'ben@adida.net' },
37 silly resolved     scripts: { test: 'vows --spec' },
37 silly resolved     engines: { node: '>= 0.8.0' },
37 silly resolved     licenses:
37 silly resolved      { type: 'MPL 2.0',
37 silly resolved        url: 'https://raw.github.com/mozilla/node-client-sessions/master/LICENSE' },
37 silly resolved     bugs: { url: 'https://github.com/mozilla/node-client-sessions/issues' },
37 silly resolved     readme: '[![build status](https://secure.travis-ci.org/mozilla/node-client-sessions.png)](http://travis-ci.org/mozilla/node-client-sessions)\n\nclient-sessions is connect middleware that implements sessions in encrypted tamper-free cookies.  For a complete introduction to encrypted client side sessions, refer to [Francois Marier\'s blog post on the subject][];\n\n[Francois Marier\'s blog post on the subject]: https://hacks.mozilla.org/2012/12/using-secure-client-side-sessions-to-build-simple-and-scalable-node-js-applications-a-node-js-holiday-season-part-3/\n\n**NOTE:** It is not recommended using both this middleware and connect\'s built-in session middleware.\n\n## Usage\n\nBasic usage:\n\n    var sessions = require("client-sessions");\n    app.use(sessions({\n      cookieName: \'mySession\', // cookie name dictates the key name added to the request object\n      secret: \'blargadeeblargblarg\', // should be a large unguessable string\n      duration: 24 * 60 * 60 * 1000, // how long the session will stay valid in ms\n      activeDuration: 1000 * 60 * 5 // if expiresIn < activeDuration, the session will be extended by activeDuration milliseconds\n    }));\n\n    app.use(function(req, res, next) {\n      if (req.mySession.seenyou) {\n        res.setHeader(\'X-Seen-You\', \'true\');\n      } else {\n        // setting a property will automatically cause a Set-Cookie response\n        // to be sent\n        req.mySession.seenyou = true;\n        res.setHeader(\'X-Seen-You\', \'false\');\n      }\n    });\n\nYou can control more specific cookie behavior during setup:\n\n    app.use(sessions({\n      cookieName: \'mySession\', // cookie name dictates the key name added to the request object\n      secret: \'blargadeeblargblarg\', // should be a large unguessable string\n      duration: 24 * 60 * 60 * 1000, // how long the session will stay valid in ms\n      cookie: {\n        path: \'/api\', // cookie will only be sent to requests under \'/api\'\n        maxAge: 60000, // duration of the cookie in milliseconds, defaults to duration above\n        ephemeral: false, // when true, cookie expires when the browser closes\n        httpOnly: true, // when true, cookie is not accessible from javascript\n        secure: false   // when true, cookie will only be sent over SSL\n      }\n    }));\n\nYou can have multiple cookies:\n\n    // a 1 week session\n    app.use(sessions({\n      cookieName: \'shopping_cart\',\n      secret: \'first secret\',\n      duration: 7 * 24 * 60 * 60 * 1000\n    }));\n\n    // a 2 hour encrypted session\n    app.use(sessions({\n      cookieName: \'authenticated\',\n      secret: \'first secret\',\n      duration: 2 * 60 * 60 * 1000\n    }));\n\nIn this example, there\'s a 2 hour authentication session, but shopping carts persist for a week.\n\nFinally, you can use requestKey to force the name where information can be accessed on the request object.\n\n    var sessions = require("client-sessions");\n    app.use(sessions({\n      cookieName: \'mySession\',\n      requestKey: \'forcedSessionKey\', // requestKey overrides cookieName for the key name added to the request object.\n      secret: \'blargadeeblargblarg\', // should be a large unguessable string\n      duration: 24 * 60 * 60 * 1000, // how long the session will stay valid in ms\n    }));\n\n    app.use(function(req, res, next) {\n      // requestKey forces the session information to be\n      // accessed via forcedSessionKey\n      if (req.forcedSessionKey.seenyou) {\n        res.setHeader(\'X-Seen-You\', \'true\');\n      }\n      next();\n    });\n\n\n## License\n\n> This Source Code Form is subject to the terms of the Mozilla Public\n> License, v. 2.0. If a copy of the MPL was not distributed with this\n> file, You can obtain one at http://mozilla.org/MPL/2.0/.\n',
37 silly resolved     readmeFilename: 'README.md',
37 silly resolved     homepage: 'https://github.com/mozilla/node-client-sessions',
37 silly resolved     _id: 'client-sessions@0.4.0',
37 silly resolved     _from: 'client-sessions@' } ]
38 info install client-sessions@0.4.0 into C:\Users\dan\Documents\GitHub\group-lunches
39 info installOne client-sessions@0.4.0
40 info C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions unbuild
41 verbose tar unpack C:\Users\dan\AppData\Roaming\npm-cache\client-sessions\0.4.0\package.tgz
42 silly lockFile f6549e34-hes-node-modules-client-sessions tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions
43 verbose lock tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions C:\Users\dan\AppData\Roaming\npm-cache\f6549e34-hes-node-modules-client-sessions.lock
44 silly lockFile c6d27bba-lient-sessions-0-4-0-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\client-sessions\0.4.0\package.tgz
45 verbose lock tar://C:\Users\dan\AppData\Roaming\npm-cache\client-sessions\0.4.0\package.tgz C:\Users\dan\AppData\Roaming\npm-cache\c6d27bba-lient-sessions-0-4-0-package-tgz.lock
46 silly gunzTarPerm modes [ '755', '644' ]
47 silly gunzTarPerm extractEntry package.json
48 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
49 silly gunzTarPerm extractEntry .npmignore
50 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
51 silly gunzTarPerm extractEntry README.md
52 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
53 silly gunzTarPerm extractEntry LICENSE
54 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
55 silly gunzTarPerm extractEntry .travis.yml
56 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
57 silly gunzTarPerm extractEntry ChangeLog
58 silly gunzTarPerm modified mode [ 'ChangeLog', 438, 420 ]
59 silly gunzTarPerm extractEntry lib/client-sessions.js
60 silly gunzTarPerm modified mode [ 'lib/client-sessions.js', 438, 420 ]
61 silly gunzTarPerm extractEntry lib/ProxyHandler.js
62 silly gunzTarPerm modified mode [ 'lib/ProxyHandler.js', 438, 420 ]
63 silly gunzTarPerm extractEntry scripts/run_all_tests.sh
64 silly gunzTarPerm modified mode [ 'scripts/run_all_tests.sh', 438, 420 ]
65 silly gunzTarPerm extractEntry test/all-test.js
66 silly gunzTarPerm modified mode [ 'test/all-test.js', 438, 420 ]
67 silly lockFile f6549e34-hes-node-modules-client-sessions tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions
68 silly lockFile f6549e34-hes-node-modules-client-sessions tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions
69 silly lockFile c6d27bba-lient-sessions-0-4-0-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\client-sessions\0.4.0\package.tgz
70 silly lockFile c6d27bba-lient-sessions-0-4-0-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\client-sessions\0.4.0\package.tgz
71 info preinstall client-sessions@0.4.0
72 verbose readDependencies using package.json deps
73 verbose readDependencies using package.json deps
74 verbose cache add [ 'cookies@0.3.6', null ]
75 verbose cache add name=undefined spec="cookies@0.3.6" args=["cookies@0.3.6",null]
76 verbose parsed url { protocol: null,
76 verbose parsed url   slashes: null,
76 verbose parsed url   auth: null,
76 verbose parsed url   host: null,
76 verbose parsed url   port: null,
76 verbose parsed url   hostname: null,
76 verbose parsed url   hash: null,
76 verbose parsed url   search: null,
76 verbose parsed url   query: null,
76 verbose parsed url   pathname: 'cookies@0.3.6',
76 verbose parsed url   path: 'cookies@0.3.6',
76 verbose parsed url   href: 'cookies@0.3.6' }
77 verbose cache add name="cookies" spec="0.3.6" args=["cookies","0.3.6"]
78 verbose parsed url { protocol: null,
78 verbose parsed url   slashes: null,
78 verbose parsed url   auth: null,
78 verbose parsed url   host: null,
78 verbose parsed url   port: null,
78 verbose parsed url   hostname: null,
78 verbose parsed url   hash: null,
78 verbose parsed url   search: null,
78 verbose parsed url   query: null,
78 verbose parsed url   pathname: '0.3.6',
78 verbose parsed url   path: '0.3.6',
78 verbose parsed url   href: '0.3.6' }
79 verbose addNamed [ 'cookies', '0.3.6' ]
80 verbose addNamed [ '0.3.6', '0.3.6' ]
81 silly lockFile b82adebd-cookies-0-3-6 cookies@0.3.6
82 verbose lock cookies@0.3.6 C:\Users\dan\AppData\Roaming\npm-cache\b82adebd-cookies-0-3-6.lock
83 verbose cache add [ 'node-proxy@0.6.0', null ]
84 verbose cache add name=undefined spec="node-proxy@0.6.0" args=["node-proxy@0.6.0",null]
85 verbose parsed url { protocol: null,
85 verbose parsed url   slashes: null,
85 verbose parsed url   auth: null,
85 verbose parsed url   host: null,
85 verbose parsed url   port: null,
85 verbose parsed url   hostname: null,
85 verbose parsed url   hash: null,
85 verbose parsed url   search: null,
85 verbose parsed url   query: null,
85 verbose parsed url   pathname: 'node-proxy@0.6.0',
85 verbose parsed url   path: 'node-proxy@0.6.0',
85 verbose parsed url   href: 'node-proxy@0.6.0' }
86 verbose cache add name="node-proxy" spec="0.6.0" args=["node-proxy","0.6.0"]
87 verbose parsed url { protocol: null,
87 verbose parsed url   slashes: null,
87 verbose parsed url   auth: null,
87 verbose parsed url   host: null,
87 verbose parsed url   port: null,
87 verbose parsed url   hostname: null,
87 verbose parsed url   hash: null,
87 verbose parsed url   search: null,
87 verbose parsed url   query: null,
87 verbose parsed url   pathname: '0.6.0',
87 verbose parsed url   path: '0.6.0',
87 verbose parsed url   href: '0.6.0' }
88 verbose addNamed [ 'node-proxy', '0.6.0' ]
89 verbose addNamed [ '0.6.0', '0.6.0' ]
90 silly lockFile 4095cacd-node-proxy-0-6-0 node-proxy@0.6.0
91 verbose lock node-proxy@0.6.0 C:\Users\dan\AppData\Roaming\npm-cache\4095cacd-node-proxy-0-6-0.lock
92 verbose url raw cookies/0.3.6
93 verbose url resolving [ 'https://registry.npmjs.org/', './cookies/0.3.6' ]
94 verbose url resolved https://registry.npmjs.org/cookies/0.3.6
95 info trying registry request attempt 1 at 14:10:38
96 verbose etag "2JAPTCT4A28OD942F8WOOVG1F"
97 http GET https://registry.npmjs.org/cookies/0.3.6
98 verbose url raw node-proxy/0.6.0
99 verbose url resolving [ 'https://registry.npmjs.org/', './node-proxy/0.6.0' ]
100 verbose url resolved https://registry.npmjs.org/node-proxy/0.6.0
101 info trying registry request attempt 1 at 14:10:38
102 verbose etag "BLB57TJSH9KHSUFX7UMD73I35"
103 http GET https://registry.npmjs.org/node-proxy/0.6.0
104 http 304 https://registry.npmjs.org/cookies/0.3.6
105 silly registry.get cb [ 304,
105 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
105 silly registry.get     etag: '"2JAPTCT4A28OD942F8WOOVG1F"',
105 silly registry.get     date: 'Sun, 17 Nov 2013 20:10:39 GMT',
105 silly registry.get     'content-length': '0' } ]
106 verbose etag cookies/0.3.6 from cache
107 http 304 https://registry.npmjs.org/node-proxy/0.6.0
108 silly registry.get cb [ 304,
108 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
108 silly registry.get     etag: '"BLB57TJSH9KHSUFX7UMD73I35"',
108 silly registry.get     date: 'Sun, 17 Nov 2013 20:10:39 GMT',
108 silly registry.get     'content-length': '0' } ]
109 verbose etag node-proxy/0.6.0 from cache
110 silly lockFile b82adebd-cookies-0-3-6 cookies@0.3.6
111 silly lockFile b82adebd-cookies-0-3-6 cookies@0.3.6
112 silly lockFile 4095cacd-node-proxy-0-6-0 node-proxy@0.6.0
113 silly lockFile 4095cacd-node-proxy-0-6-0 node-proxy@0.6.0
114 silly resolved [ { name: 'cookies',
114 silly resolved     version: '0.3.6',
114 silly resolved     description: 'Cookies, optionally signed using Keygrip.',
114 silly resolved     main: './lib/cookies',
114 silly resolved     dependencies: {},
114 silly resolved     devDependencies: { express: '*', restify: '*', keygrip: '*' },
114 silly resolved     engines: { node: '>= 0.6.0' },
114 silly resolved     author:
114 silly resolved      { name: 'Jed Schmidt',
114 silly resolved        email: 'tr@nslator.jp',
114 silly resolved        url: 'http://jed.is' },
114 silly resolved     homepage: 'https://github.com/jed/cookies',
114 silly resolved     repository: { type: 'git', url: 'git://github.com/jed/cookies.git' },
114 silly resolved     scripts: { test: 'node ./test/http.js && node ./test/express.js && node ./test/restify.js' },
114 silly resolved     optionalDependencies: {},
114 silly resolved     readme: 'Cookies\n=======\n\n[![Build Status](https://secure.travis-ci.org/jed/cookies.png)](http://travis-ci.org/jed/cookies)\n\nCookies is a [node.js](http://nodejs.org/) module for getting and setting HTTP(S) cookies. Cookies can be signed to prevent tampering, using [Keygrip](https://github.com/jed/keygrip). It can be used with the built-in node.js HTTP library, or as Connect/Express middleware.\n\n## Requirements\n\n* [node.js](http://nodejs.org/), tested with 0.4.1\n\n## Install\n\n    $ npm install cookies\n    \n## Features\n\n* **Lazy**: Since cookie verification against multiple keys could be expensive, cookies are only verified lazily when accessed, not eagerly on each request.\n\n* **Secure**: All cookies are `httponly` by default, and cookies sent over SSL are `secure` by default. An error will be thrown if you try to send secure cookies over an insecure socket.\n\n* **Unobtrusive**: Signed cookies are stored the same way as unsigned cookies, instead of in an obfuscated signing format. An additional signature cookie is stored for each signed cookie, using a standard naming convention (_cookie-name_`.sig`). This allows other libraries to access the original cookies without having to know the signing mechanism.\n\n* **Agnostic**: This library is optimized for use with [Keygrip](https://github.com/jed/keygrip), but does not require it; you can implement your own signing scheme instead if you like and use this library only to read/write cookies. Factoring the signing into a separate library encourages code reuse and allows you to use the same signing library for other areas where signing is needed, such as in URLs.\n\n## API\n\n### cookies = new Cookies( request, response, [ Object keygrip ] )\n\nThis creates a cookie jar corresponding to the current _request_ and _response_. A [Keygrip](https://github.com/jed/keygrip) object can optionally be passed as the third argument _keygrip_ to enable cryptographic signing based on SHA1 HMAC, using rotated credentials.\n\nNote that since this only saves parameters without any other processing, it is very lightweight. Cookies are only parsed on demand when they are accessed.\n\n### express.createServer( Cookies.express([ Object keygrip ] ) )\n\nThis adds cookie support as a Connect middleware layer for use in Express apps, allowing inbound cookies to be read using `req.cookies.get` and outbound cookies to be set using `res.cookies.set`.\n\n### cookies.get( name, [ options ] )\n\nThis extracts the cookie with the given name from the `Cookie` header in the request. If such a cookie exists, its value is returned. Otherwise, nothing is returned.\n\n`{ signed: true }` can optionally be passed as the second parameter _options_. In this case, a signature cookie (a cookie of same name ending with the `.sig` suffix appended) is fetched. If no such cookie exists, nothing is returned.\n\nIf the signature cookie _does_ exist, the provided [Keygrip](https://github.com/jed/keygrip) object is used to check whether the hash of _cookie-name_=_cookie-value_ matches that of any registered key:\n\n* If the signature cookie hash matches the first key, the original cookie value is returned.\n* If the signature cookie hash matches any other key, the original cookie value is returned AND an outbound header is set to update the signature cookie\'s value to the hash of the first key. This enables automatic freshening of signature cookies that have become stale due to key rotation.\n* If the signature cookie hash does not match any key, nothing is returned, and an outbound header with an expired date is used to delete the cookie.\n\n### cookies.set( name, [ value ], [ options ] )\n\nThis sets the given cookie in the response and returns the current context to allow chaining.\n\nIf the _name_ is omitted, an outbound header with an expired date is used to delete the cookie.\n\nIf the _options_ object is provided, it will be used to generate the outbound cookie header as follows:\n\n* `expires`: a `Date` object indicating the cookie\'s expiration date (expires at the end of session by default).\n* `path`: a string indicating the path of the cookie (`/` by default).\n* `domain`: a string indicating the domain of the cookie (no default).\n* `secure`: a boolean indicating whether the cookie is only to be sent over HTTPS (`false` by default for HTTP, `true` by default for HTTPS).\n* `secureProxy`: a boolean indicating whether the cookie is only to be sent over HTTPS (use this if you handle SSL not in your node process).\n* `httpOnly`: a boolean indicating whether the cookie is only to be sent over HTTP(S), and not made available to client JavaScript (`true` by default).\n* `signed`: a boolean indicating whether the cookie is to be signed (`false` by default). If this is true, another cookie of the same name with the `.sig` suffix appended will also be sent, with a 27-byte url-safe base64 SHA1 value representing the hash of _cookie-name_=_cookie-value_ against the first [Keygrip](https://github.com/jed/keygrip) key. This signature key is used to detect tampering the next time a cookie is received.\n* `overwrite`: a boolean indicating whether to overwrite previously set cookies of the same name (`false` by default). If this is true, all cookies set during the same request with the same name (regardless of path or domain) are filtered out of the Set-Cookie header when setting this cookie.\n\n## Example\n\n```javascript\n// from ./test.js\nserver = http.createServer( function( req, res ) {\n  var cookies = new Cookies( req, res, keys )\n    , unsigned, signed, tampered\n  \n  if ( req.url == "/set" ) {\n    cookies\n      // set a regular cookie\n      .set( "unsigned", "foo", { httpOnly: false } )\n\n      // set a signed cookie\n      .set( "signed", "bar", { signed: true } )\n\n      // mimic a signed cookie, but with a bogus signature\n      .set( "tampered", "baz" )\n      .set( "tampered.sig", "bogus" )\n\n    res.writeHead( 302, { "Location": "/" } )\n    return res.end( "Now let\'s check." )\n  }\n  \n  unsigned = cookies.get( "unsigned" )\n  signed = cookies.get( "signed", { signed: true } )\n  tampered = cookies.get( "tampered", { signed: true } )\n  \n  assert.equal( unsigned, "foo" )\n  assert.equal( signed, "bar" )\n  assert.notEqual( tampered, "baz" )\n  assert.equal( tampered, undefined )\n\n  res.writeHead( 200, { "Content-Type": "text/plain" } )\n  res.end(\n    "unsigned expected: foo\\n\\n" +\n    "unsigned actual: " + unsigned + "\\n\\n" +\n    "signed expected: bar\\n\\n" +\n    "signed actual: " + signed + "\\n\\n" +\n    "tampered expected: undefined\\n\\n"+\n    "tampered: " + tampered + "\\n\\n"\n  )\n})\n```\n\nCopyright\n---------\n\nCopyright (c) 2012 Jed Schmidt. See LICENSE.txt for details.\n\nSend any questions or comments [here](http://twitter.com/jedschmidt).\n',
114 silly resolved     readmeFilename: 'README.md',
114 silly resolved     bugs: { url: 'https://github.com/jed/cookies/issues' },
114 silly resolved     _id: 'cookies@0.3.6',
114 silly resolved     _from: 'cookies@0.3.6' },
114 silly resolved   { name: 'node-proxy',
114 silly resolved     version: '0.6.0',
114 silly resolved     description: 'A module for node implementing __noSuchMethod__-type handlers, such as object overloading, as part of the Harmony Catch-All Proxies specification found at http://wiki.ecmascript.org/doku.php?id=harmony:proxies',
114 silly resolved     keywords: [ 'interceptor', 'proxy', 'overload', '__noSuchMethod__' ],
114 silly resolved     contributors: [ [Object], [Object], [Object] ],
114 silly resolved     licenses: [ [Object] ],
114 silly resolved     bugs: { url: 'http://github.com/samshull/node-proxy/issues' },
114 silly resolved     implements: [ 'http://wiki.ecmascript.org/doku.php?id=harmony:proxies' ],
114 silly resolved     engines: { node: '>=0.6', npm: '>= 1.1.17' },
114 silly resolved     repositories: [ [Object] ],
114 silly resolved     main: './lib/node-proxy.js',
114 silly resolved     scripts:
114 silly resolved      { install: 'node-gyp configure build',
114 silly resolved        test: 'node test/test.js' },
114 silly resolved     readme: 'node-proxy is an implementation of Harmony Proxies http://wiki.ecmascript.org/doku.php?id=harmony:proxies\nthat allows the developer to create "catch-all" property handlers for an object or a function in node.js.\n\nAuthor: Sam Shull  \nRepository: http://github.com/samshull/node-proxy  \nIssues: http://github.com/samshull/node-proxy/issues  \n\n*** This does not work appropriately in node versions 0.1.100 - 0.1.102. You will need to install node_version.h in $PREFIX/include/node\n\nMethods:\n\nObject create(ProxyHandler handler [, Object proto ] ) throws Error, TypeError\n\nFunction createFunction(ProxyHandler handler, Function callTrap [, Function constructTrap ] ) throws Error, TypeError\n\nBoolean isTrapping(Object obj) throws Error\n\n\nAdditional Methods (for ECMAScript 5 compatibliity): @see http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\n\nBoolean freeze(Object obj) throws Error, TypeError\n\nBoolean seal(Object obj) throws Error, TypeError\n\nBoolean preventExtensions(Object obj) throws Error, TypeError\n\nBoolean isFrozen(Object obj) throws Error, TypeError\n\nBoolean isSealed(Object obj) throws Error, TypeError\n\nBoolean isExtensible(Object obj) throws Error, TypeError\n\nPropertyDescriptor getOwnPropertyDescriptor(Object obj, String name) throws Error, TypeError\n\nBoolean defineProperty(Object obj, String name, PropertyDescriptor pd) throws Error, TypeError\n\nBoolean defineProperties(Object obj, Object descriptors) throws Error, TypeError\n\n\nMore methods:\n\nObject hidden(Object obj, String name [, Object value ] ) throws Error\n- Set or retrieve a hidden property on an Object\n\nObject clone(Object obj) throws Error\n- Create a shallow copy of an Object\n\nBoolean isProxy(Object obj)\n- determine if an object was created by Proxy\n\nBoolean setPrototype(Object obj, Object obj) throws Error\n-set the prototype of a given object to the second given object\n',
114 silly resolved     readmeFilename: 'README.md',
114 silly resolved     repository: { type: 'git', url: 'http://github.com/samshull/node-proxy' },
114 silly resolved     homepage: 'https://github.com/samshull/node-proxy',
114 silly resolved     _id: 'node-proxy@0.6.0',
114 silly resolved     _from: 'node-proxy@0.6.0' } ]
115 info install cookies@0.3.6 into C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions
116 info install node-proxy@0.6.0 into C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions
117 info installOne cookies@0.3.6
118 info installOne node-proxy@0.6.0
119 info C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\cookies unbuild
120 info C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy unbuild
121 verbose tar unpack C:\Users\dan\AppData\Roaming\npm-cache\cookies\0.3.6\package.tgz
122 silly lockFile cf6cbc7f-nt-sessions-node-modules-cookies tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\cookies
123 verbose lock tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\cookies C:\Users\dan\AppData\Roaming\npm-cache\cf6cbc7f-nt-sessions-node-modules-cookies.lock
124 silly lockFile 03cff33d--cache-cookies-0-3-6-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\cookies\0.3.6\package.tgz
125 verbose lock tar://C:\Users\dan\AppData\Roaming\npm-cache\cookies\0.3.6\package.tgz C:\Users\dan\AppData\Roaming\npm-cache\03cff33d--cache-cookies-0-3-6-package-tgz.lock
126 verbose tar unpack C:\Users\dan\AppData\Roaming\npm-cache\node-proxy\0.6.0\package.tgz
127 silly lockFile d1345379-sessions-node-modules-node-proxy tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy
128 verbose lock tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy C:\Users\dan\AppData\Roaming\npm-cache\d1345379-sessions-node-modules-node-proxy.lock
129 silly lockFile 946b6892-che-node-proxy-0-6-0-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\node-proxy\0.6.0\package.tgz
130 verbose lock tar://C:\Users\dan\AppData\Roaming\npm-cache\node-proxy\0.6.0\package.tgz C:\Users\dan\AppData\Roaming\npm-cache\946b6892-che-node-proxy-0-6-0-package-tgz.lock
131 silly gunzTarPerm modes [ '755', '644' ]
132 silly gunzTarPerm modes [ '755', '644' ]
133 silly gunzTarPerm extractEntry package.json
134 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
135 silly gunzTarPerm extractEntry package.json
136 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
137 silly gunzTarPerm extractEntry .npmignore
138 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
139 silly gunzTarPerm extractEntry README.md
140 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
141 silly gunzTarPerm extractEntry .npmignore
142 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
143 silly gunzTarPerm extractEntry README.md
144 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
145 silly gunzTarPerm extractEntry .travis.yml
146 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
147 silly gunzTarPerm extractEntry lib/cookies.js
148 silly gunzTarPerm modified mode [ 'lib/cookies.js', 438, 420 ]
149 silly gunzTarPerm extractEntry binding.gyp
150 silly gunzTarPerm modified mode [ 'binding.gyp', 438, 420 ]
151 silly gunzTarPerm extractEntry examples/autoload-namespace/autoload-namespace.js
152 silly gunzTarPerm modified mode [ 'examples/autoload-namespace/autoload-namespace.js', 438, 420 ]
153 silly gunzTarPerm extractEntry LICENSE.txt
154 silly gunzTarPerm modified mode [ 'LICENSE.txt', 438, 420 ]
155 silly gunzTarPerm extractEntry test/express.js
156 silly gunzTarPerm modified mode [ 'test/express.js', 438, 420 ]
157 silly gunzTarPerm extractEntry test/http.js
158 silly gunzTarPerm modified mode [ 'test/http.js', 438, 420 ]
159 silly gunzTarPerm extractEntry test/restify.js
160 silly gunzTarPerm modified mode [ 'test/restify.js', 438, 420 ]
161 silly gunzTarPerm extractEntry examples/autoload-namespace/autoload-test.js
162 silly gunzTarPerm modified mode [ 'examples/autoload-namespace/autoload-test.js', 438, 420 ]
163 silly gunzTarPerm extractEntry examples/autoload-namespace/org/w3c/DOM/Document.js
164 silly gunzTarPerm modified mode [ 'examples/autoload-namespace/org/w3c/DOM/Document.js',
164 silly gunzTarPerm   438,
164 silly gunzTarPerm   420 ]
165 silly gunzTarPerm extractEntry examples/autoload-namespace/org/w3c/DOM/Document/String/Test.js
166 silly gunzTarPerm modified mode [ 'examples/autoload-namespace/org/w3c/DOM/Document/String/Test.js',
166 silly gunzTarPerm   438,
166 silly gunzTarPerm   420 ]
167 silly gunzTarPerm extractEntry lib/node-proxy.js
168 silly gunzTarPerm modified mode [ 'lib/node-proxy.js', 438, 420 ]
169 silly gunzTarPerm extractEntry LICENSE.txt
170 silly gunzTarPerm modified mode [ 'LICENSE.txt', 438, 420 ]
171 silly gunzTarPerm extractEntry src/node-proxy.cc
172 silly gunzTarPerm modified mode [ 'src/node-proxy.cc', 438, 420 ]
173 silly gunzTarPerm extractEntry src/node-proxy.h
174 silly gunzTarPerm modified mode [ 'src/node-proxy.h', 438, 420 ]
175 silly gunzTarPerm extractEntry test/test.js
176 silly gunzTarPerm modified mode [ 'test/test.js', 438, 420 ]
177 silly lockFile cf6cbc7f-nt-sessions-node-modules-cookies tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\cookies
178 silly lockFile cf6cbc7f-nt-sessions-node-modules-cookies tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\cookies
179 silly lockFile 03cff33d--cache-cookies-0-3-6-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\cookies\0.3.6\package.tgz
180 silly lockFile 03cff33d--cache-cookies-0-3-6-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\cookies\0.3.6\package.tgz
181 info preinstall cookies@0.3.6
182 verbose readDependencies using package.json deps
183 verbose readDependencies using package.json deps
184 silly resolved []
185 verbose about to build C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\cookies
186 info build C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\cookies
187 verbose linkStuff [ false,
187 verbose linkStuff   false,
187 verbose linkStuff   false,
187 verbose linkStuff   'C:\\Users\\dan\\Documents\\GitHub\\group-lunches\\node_modules\\client-sessions\\node_modules' ]
188 info linkStuff cookies@0.3.6
189 verbose linkBins cookies@0.3.6
190 verbose linkMans cookies@0.3.6
191 verbose rebuildBundles cookies@0.3.6
192 info install cookies@0.3.6
193 info postinstall cookies@0.3.6
194 silly lockFile d1345379-sessions-node-modules-node-proxy tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy
195 silly lockFile d1345379-sessions-node-modules-node-proxy tar://C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy
196 silly lockFile 946b6892-che-node-proxy-0-6-0-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\node-proxy\0.6.0\package.tgz
197 silly lockFile 946b6892-che-node-proxy-0-6-0-package-tgz tar://C:\Users\dan\AppData\Roaming\npm-cache\node-proxy\0.6.0\package.tgz
198 info preinstall node-proxy@0.6.0
199 verbose readDependencies using package.json deps
200 verbose readDependencies using package.json deps
201 silly resolved []
202 verbose about to build C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy
203 info build C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy
204 verbose linkStuff [ false,
204 verbose linkStuff   false,
204 verbose linkStuff   false,
204 verbose linkStuff   'C:\\Users\\dan\\Documents\\GitHub\\group-lunches\\node_modules\\client-sessions\\node_modules' ]
205 info linkStuff node-proxy@0.6.0
206 verbose linkBins node-proxy@0.6.0
207 verbose linkMans node-proxy@0.6.0
208 verbose rebuildBundles node-proxy@0.6.0
209 info install node-proxy@0.6.0
210 verbose unsafe-perm in lifecycle true
211 info node-proxy@0.6.0 Failed to exec install script
212 info C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules\node-proxy unbuild
213 info preuninstall node-proxy@0.6.0
214 info uninstall node-proxy@0.6.0
215 verbose false,C:\Users\dan\Documents\GitHub\group-lunches\node_modules,C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions\node_modules unbuild node-proxy@0.6.0
216 info postuninstall node-proxy@0.6.0
217 verbose about to build C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions
218 info C:\Users\dan\Documents\GitHub\group-lunches\node_modules\client-sessions unbuild
219 info preuninstall client-sessions@0.4.0
220 info uninstall client-sessions@0.4.0
221 verbose true,C:\Users\dan\Documents\GitHub\group-lunches\node_modules,C:\Users\dan\Documents\GitHub\group-lunches\node_modules unbuild client-sessions@0.4.0
222 info postuninstall client-sessions@0.4.0
223 error node-proxy@0.6.0 install: `node-gyp configure build`
223 error Exit status 1
224 error Failed at the node-proxy@0.6.0 install script.
224 error This is most likely a problem with the node-proxy package,
224 error not with npm itself.
224 error Tell the author that this fails on your system:
224 error     node-gyp configure build
224 error You can get their info via:
224 error     npm owner ls node-proxy
224 error There is likely additional logging output above.
225 error System Windows_NT 6.1.7601
226 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "client-sessions" "--save"
227 error cwd C:\Users\dan\Documents\GitHub\group-lunches
228 error node -v v0.10.22
229 error npm -v 1.3.14
230 error code ELIFECYCLE
231 verbose exit [ 1, true ]
